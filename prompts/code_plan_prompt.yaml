system_msg:
  You are a python project designer.Your task is to design python project according to project description.Notice that you should design the project step by step and follow Object-Oriented-Programming design style.
prompt_templates:
  task_desc_template: |
    {project_desc}.Write your project design step by step.Your answer should be consistent with following restriction.
    (1)、You should only describe one class or one function's design in one step.
    (2)、Your answer should be 'Step {step_number}:Create a class called {class_name}.This class will be responsible for {class_description}.' or 'Step {step_number}:Create a function called {function_name}.This function will be responsible for {function_description}.'
  dependency_graph_generating_template: |
    {project_desc}.
    Now I have following steps to complete the task:
      {steps_desc}
    Now you need to specify the dependecy relationship between the functions and classes in above steps.
    Answer me as following json format:
    {
      'class 1':[
        {
          'explanation':<<<your explanation why class 1 will use class 2>>>,
          'used_class':class 2'
        },
        {
          'explanation':<<<your explanation why class 1 will use function 2>>>,
          'used_function':'function 2'
        }
        ],
      'class 2':[
           ...
        ],
      ...
    }
examples:
  task_desc_examples:
    - Q: |
        I want to write one python project can play gomoku chess.Write your project design step by step.Your answer should be consistent with following restriction.
        (1)、You should only describe one class or one function's design in one step.
        (2)、Your answer should be 'Step {step_number}:Create a class called {class_name}.This class will be responsible for {class_description}.' or 'Step {step_number}:Create a function called {function_name}.This function will be responsible for {function_description}.'
      A: |
        Step 1:Create a class called GomokuBoard. This class will be responsible for keeping track of the board state and providing methods for updating the board state.
        Step 2:Create a class called Player. This class will be responsible for keeping track of the player's state and providing methods for making moves.
        Step 3:Create a class called Game. This class will be responsible for managing the game and providing methods for starting and ending the game.
        Step 4:Create a class called AI. This class will be responsible for providing methods for making moves based on a set of rules.
        Step 5:Create a function called main.This function will be responsible for setting up the game and running the game loop.
        Step 6:Create a function called bord_display.This function will be responsible for displaying the board state to the user.
        Step 7:Create a function called user_cli.This function will be responsible for taking user input and updating the board state accordingly.
        Step 8:Create a function called ai_cli.This function will be responsible for taking AI input and updating the board state accordingly.
        Step 9:Create a function called is_over.This function will be responsible for determining when the game is over.
        Step 10:Create a function called get_winner.This function will be responsible for determining who the winner is when game is over.
  dependency_graph_generating_examples:
    - Q: |
        I want to write one python project can play gomoku chess.
        Now I have following steps to complete the task:
          Step 1:Create a class called GomokuBoard. This class will be responsible for keeping track of the board state and providing methods for updating the board state.
          Step 2:Create a class called Player. This class will be responsible for keeping track of the player's state and providing methods for making moves.
          Step 3:Create a class called Game. This class will be responsible for managing the game and providing methods for starting and ending the game.
          Step 4:Create a class called AI. This class will be responsible for providing methods for making moves based on a set of rules.
          Step 5:Create a function called main.This function will be responsible for setting up the game and running the game loop.
          Step 6:Create a function called bord_display.This function will be responsible for displaying the board state to the user.
          Step 7:Create a function called user_cli.This function will be responsible for taking user input and updating the board state accordingly.
          Step 8:Create a function called ai_cli.This function will be responsible for taking AI input and updating the board state accordingly.
          Step 9:Create a function called is_over.This function will be responsible for determining when the game is over.
          Step 10:Create a function called get_winner.This function will be responsible for determining who the winner is when game is over.
        Now you need to specify the dependecy relationship between the functions and classes in above steps.
        Answer me as following json format:
        {
          'class 1':[
        {
          'explanation':<<<your explanation why class 1 will use class 2>>>,
          'used_class':class 2'
        },
        {
          'explanation':<<<your explanation why class 1 will use function 2>>>,
          'used_function':'function 2'
        }
        ],
       'class 2':[
           ...
        ],
       ...
       }
      A: |
        {
         'GomokuBoard':[
          {
            'explanation':'GomokuBoard will use Player class to keep track of the player's state and provide methods for making moves',
            'used_class':'Player'
          },
          {
            'explanation':'GomokuBoard will use Game class to manage the game and provide methods for starting and ending the game',
            'used_class':'Game'
          }
         ],
       'Player':[
         {
           'explanation':'Player will use Game class to manage the game and provide methods for starting and ending the game',
           'used_class':'Game'
         }
        ],
       'Game':[
         {
           'explanation':'Game will use GomokuBoard class to keep track of the board state and provide methods for updating the board state',
           'used_class':'GomokuBoard'
         },
         {
           'explanation':'Game will use AI class to provide methods for making moves based on a set of rules',
           'used_class':'AI'
         },
         {
           'explanation':'Game will use main function to set up the game and run the game loop',
           'used_function':'main'
         },
        {
           'explanation':'Game will use board_display function to display the board state to the user',
           'used_function':'board_display'
        },
        {
          'explanation':'Game will use user_cli function to take user input and update the board state accordingly',
          'used_function':'user_cli'
        },
        {
          'explanation':'Game will use ai_cli function to take AI input and update the board state accordingly',
          'used_function':'ai_cli'
        },
       {
         'explanation':'Game will use is_over function to determine when the game is over',
         'used_function':'is_over'
       },
       {
        'explanation':'Game will use get_winner function to determine who the winner is when game is over',
        'used_function':'get_winner'
       }
        ],
       'AI':[
         {
          'explanation':'AI will use Game class to manage the game and provide methods for starting and ending the game',
          'used_class':'Game'
          }
        ]
      }

          
